# -- Domain used for BigBang created exposed services.
hostname: bigbang.dev

autoRollingUpgrade:
  # -- Enable BigBang specific autoRollingUpgrade support
  enabled: true

# -- Pull Policy for all non-init containers in this package.
imagePullPolicy: IfNotPresent

kibana:
  # -- version
  version: 7.17.1
  image:
    # -- repository
    repository: registry1.dso.mil/ironbank/elastic/kibana/kibana
    # -- tag
    tag: 7.17.1

  # -- Only required if not using Istio for ingress.
  host: ""

  # -- Number of Kibana replicas
  count: 3

  # -- Name for serviceAccount to use, will be autocreated.
  serviceAccountName: "logging-kibana"

  updateStrategy:
    # -- type
    type: rollingUpdate
    rollingUpdate:
      # -- maxUnavailable
      maxUnavailable: 1

  # -- Set securityContext for Kibana pods
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000

  # -- imagePullSecrets
  imagePullSecrets: []

  resources:
    requests:
      # -- CPU request
      cpu: 1
      # -- Memory request
      memory: 2Gi
    limits:
      # -- CPU limit
      cpu: 1
      # -- Memory limit
      memory: 2Gi

  # -- volumes
  volumes: []

  # -- volumeMounts
  volumeMounts: []

  # -- podAnnotations
  podAnnotations:
    {}
    # bigbang.dev/istioVersion: 1.10.3

  # -- affinity
  affinity:
    {}
    # podAntiAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     - topologyKey: "kubernetes.io/hostname"
    #       labelSelector:
    #         matchLabels:
    #           dont-schedule-with: kibana
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: node-type
    #         operator: In
    #         values:
    #         - "kibana"

  # -- tolerations
  tolerations:
    []
    # - key: "workload"
    #   operator: "Equal"
    #   value: "kibana"
    #   effect: "NoSchedule"

  # -- nodeSelector
  nodeSelector:
    {}
    # node-type: kibana

  # -- lifecycle
  lifecycle:
    {}
    # preStop:
    #   exec:
    #     command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
    # postStart:
    #   exec:
    #     command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]

elasticsearch:
  # -- version
  version: 7.17.1
  image:
    # -- repository
    repository: registry1.dso.mil/ironbank/elastic/elasticsearch/elasticsearch
    # -- tag
    tag: 7.17.1

  # -- imagePullSecrets
  imagePullSecrets: []
  # -- Name for serviceAccount to use, will be autocreated.
  serviceAccountName: "logging-elasticsearch"

  # Values for master node sets.
  master:
    # -- Add an init container that adjusts the kernel setting for elastic.
    initContainers: []
    #
    # NB:  This creates a privileged init container and runs a non-ironbank image.
    # It is safer to adjust the AMI for the nodes to include this kernel setting.
    # - name: sysctl
    #   securityContext:
    #     privileged: true
    #   image: busybox
    #   command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']

    # -- Set securityContext for elasticsearch master node sets
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000

    updateStrategy:
      # -- type
      type: rollingUpdate
      rollingUpdate:
        # -- maxUnavailable
        maxUnavailable: 1

    # -- volumes
    volumes: []
    # - name: cert
    #   secret:
    #     secretName: cert
    #     defaultMode: 0644

    # -- volumeMounts
    volumeMounts: []
    # - mountPath: "/usr/share/elasticsearch/config/oidc/ca.crt"
    #   name: cert
    #   subPath: ca.crt
    #   readOnly: true

    # -- podAnnotations
    podAnnotations:
      {}
      # bigbang.dev/istioVersion: 1.10.3

    # -- affinity
    affinity:
      {}
      # podAntiAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     - topologyKey: "kubernetes.io/hostname"
      #       labelSelector:
      #         matchLabels:
      #           dont-schedule-with: elastic-master
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #     - matchExpressions:
      #       - key: node-type
      #         operator: In
      #         values:
      #         - "elastic-master"

    # -- tolerations
    tolerations:
      []
      # - key: "workload"
      #   operator: "Equal"
      #   value: "elasticsearch"
      #   effect: "NoSchedule"

    # -- nodeSelector
    nodeSelector:
      {}
      # node-type: elastic-master

    # -- lifecycle
    lifecycle:
      {}
      # preStop:
      #   exec:
      #     command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]

    # -- count
    count: 3
    persistence:
      # -- storageClassName
      storageClassName: ""
      # -- size
      size: 5Gi
    resources:
      limits:
        # -- CPU limit
        cpu: 1
        # -- Memory limit
        memory: 4Gi
      requests:
        # -- CPU request
        cpu: 1
        # -- Memory request
        memory: 4Gi
    heap:
      # -- Xms
      min: 2g
      # -- Xmx
      max: 2g

  # Values for data node sets.
  data:
    # -- Add an init container that adjusts the kernel setting for elastic.
    initContainers: []
    # NB:  This creates a privileged init container and runs a non-ironbank image.
    # It is safer to adjust the AMI for the nodes to include this kernel setting.
    # - name: sysctl
    #   securityContext:
    #     privileged: true
    #   image: busybox
    #   command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']

    # -- Set securityContext for elasticsearch data node sets
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000

    # -- volumes
    volumes:
      []
      # - name: cert
      #   secret:
      #     secretName: cert
      #     defaultMode: 0644

    # -- volumeMounts
    volumeMounts:
      []
      # - mountPath: "/usr/share/elasticsearch/config/oidc/ca.crt"
      #   name: cert
      #   subPath: ca.crt
      #   readOnly: true

    # -- podAnnotations
    podAnnotations:
      {}
      # bigbang.dev/istioVersion: 1.10.3

    # -- affinity
    affinity:
      {}
      # podAntiAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     - topologyKey: "kubernetes.io/hostname"
      #       labelSelector:
      #         matchLabels:
      #           dont-schedule-with: elastic-data
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #     - matchExpressions:
      #       - key: node-type
      #         operator: In
      #         values:
      #         - "elastic-data"

    # -- tolerations
    tolerations:
      []
      # - key: "workload"
      #   operator: "Equal"
      #   value: "elastic-data"
      #   effect: "NoSchedule"

    # -- nodeSelector
    nodeSelector:
      {}
      # node-type: elastic-data

    # -- lifecycle
    lifecycle:
      {}
      # preStop:
      #   exec:
      #     command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]

    # -- count
    count: 4
    persistence:
      # -- storageClassName
      storageClassName: ""
      # -- size
      size: 100Gi
    resources:
      limits:
        # -- CPU limits
        cpu: 1
        # -- Memory limits
        memory: 4Gi
      requests:
        # -- CPU requests
        cpu: 1
        # -- Memory requests
        memory: 4Gi
    heap:
      # -- Xms
      min: 2g
      # -- Xmx
      max: 2g

  #
  # Ingest
  #
  # Values for ingest node sets.
  ingest:
    # -- enabled
    enabled: false
    # -- initContainers
    initContainers: []
    # add an init container that adjusts the kernel setting for elastic
    # - name: sysctl
    #   securityContext:
    #     privileged: true
    #   image: busybox
    #   command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']

    # -- Set securityContext for elasticsearch ingest node sets
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000

    # -- volumes
    volumes:
      []
      # - name: cert
      #   secret:
      #     secretName: cert
      #     defaultMode: 0644

    # -- volumeMounts
    volumeMounts:
      []
      # - mountPath: "/usr/share/elasticsearch/config/oidc/ca.crt"
      #   name: cert
      #   subPath: ca.crt
      #   readOnly: true

    # -- podAnnotations
    podAnnotations:
      {}
      # bigbang.dev/istioVersion: 1.10.3

    # -- affinity
    affinity:
      {}
      # podAntiAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     - topologyKey: "kubernetes.io/hostname"
      #       labelSelector:
      #         matchLabels:
      #           dont-schedule-with: elastic-data
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #     - matchExpressions:
      #       - key: node-type
      #         operator: In
      #         values:
      #         - "elastic-data"

    # -- tolerations
    tolerations:
      []
      # - key: "workload"
      #   operator: "Equal"
      #   value: "elastic-data"
      #   effect: "NoSchedule"

    # -- nodeSelector
    nodeSelector:
      {}
      # node-type: elastic-data

    # -- lifecycle
    lifecycle:
      {}
      # preStop:
      #   exec:
      #     command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]

    # -- count
    count: 1
    persistence:
      # -- storageClassName
      storageClassName: ""
      # -- size
      size: 100Gi
    resources:
      limits:
        # -- CPU limits
        cpu: 1
        # -- Memory limits
        memory: 4Gi
      requests:
        # -- CPU requests
        cpu: 1
        # -- Memory requests
        memory: 4Gi
    heap:
      # -- Xms
      min: 2g
      # -- Xmx
      max: 2g

  #
  # ML
  #
  # Values for data node sets.
  ml:
    # -- enabled
    enabled: false
    # -- initContainers
    initContainers: []
    # add an init container that adjusts the kernel setting for elastic
    # - name: sysctl
    #   securityContext:
    #     privileged: true
    #   image: busybox
    #   command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']

    # -- Set securityContext for elasticsearch ml node sets
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000

    updateStrategy:
      # --RollingUpdate
      type: rollingUpdate
      rollingUpdate:
        # -- maxUnavailable
        maxUnavailable: 1

    # -- volumes
    volumes:
      []
      # - name: cert
      #   secret:
      #     secretName: cert
      #     defaultMode: 0644

    # -- volumeMounts
    volumeMounts:
      []
      # - mountPath: "/usr/share/elasticsearch/config/oidc/ca.crt"
      #   name: cert
      #   subPath: ca.crt
      #   readOnly: true

    # -- podAnnotations
    podAnnotations:
      {}
      # bigbang.dev/istioVersion: 1.10.3

    # -- affinity
    affinity:
      {}
      # podAntiAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     - topologyKey: "kubernetes.io/hostname"
      #       labelSelector:
      #         matchLabels:
      #           dont-schedule-with: elastic-data
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #     - matchExpressions:
      #       - key: node-type
      #         operator: In
      #         values:
      #         - "elastic-data"

    # -- tolerations
    tolerations:
      []
      # - key: "workload"
      #   operator: "Equal"
      #   value: "elastic-ml"
      #   effect: "NoSchedule"

    # -- nodeSelector
    nodeSelector:
      {}
      # node-type: elastic-data

    # -- lifecycle
    lifecycle:
      {}
      # preStop:
      #   exec:
      #     command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]

    # -- count
    count: 1
    persistence:
      # -- storageClassName
      storageClassName: ""
      # -- size
      size: 100Gi
    resources:
      limits:
        # -- CPU limits
        cpu: 1
        # -- Memory limits
        memory: 4Gi
      requests:
        # -- CPU requests
        cpu: 1
        # -- Memory requests
        memory: 4Gi
    heap:
      # --Xms
      min: 2g
      # -- Xmx
      max: 2g

  #
  # Coordinating
  #
  # Values for coordinating node sets.
  coord:
    # -- enabled
    enabled: false
    # -- initContainers
    initContainers: []
    # add an init container that adjusts the kernel setting for elastic
    # - name: sysctl
    #   securityContext:
    #     privileged: true
    #   image: busybox
    #   command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']

    # -- Set securityContext for elasticsearch coordinating node sets
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000

    updateStrategy:
      # -- type
      type: rollingUpdate
      rollingUpdate:
        # -- maxUnavailable
        maxUnavailable: 1

    # -- volumes
    volumes:
      []
      # - name: cert
      #   secret:
      #     secretName: cert
      #     defaultMode: 0644

    # -- volumeMounts
    volumeMounts:
      []
      # - mountPath: "/usr/share/elasticsearch/config/oidc/ca.crt"
      #   name: cert
      #   subPath: ca.crt
      #   readOnly: true

    # -- podAnnotations
    podAnnotations:
      {}
      # bigbang.dev/istioVersion: 1.10.3

    # -- affinity
    affinity:
      {}
      # podAntiAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     - topologyKey: "kubernetes.io/hostname"
      #       labelSelector:
      #         matchLabels:
      #           dont-schedule-with: elastic-data
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #     - matchExpressions:
      #       - key: node-type
      #         operator: In
      #         values:
      #         - "elastic-data"

    # -- tolerations
    tolerations: []
    # - key: "workload"
    #   operator: "Equal"
    #   value: "elastic-coord"
    #   effect: "NoSchedule"

    # -- nodeSelector
    nodeSelector:
      {}
      # node-type: elastic-data

    # -- lifecycle
    lifecycle:
      {}
      # preStop:
      #   exec:
      #     command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]

    # -- count
    count: 1
    persistence:
      # -- storageClassName
      storageClassName: ""
      # -- size
      size: 100Gi
    resources:
      limits:
        # -- cpu limits
        cpu: 1
        # -- memory limits
        memory: 4Gi
      requests:
        # -- cpu requests
        cpu: 1
        # -- memory requests
        memory: 4Gi
    heap:
      # -- Xms
      min: 2g
      # -- Xmx
      max: 2g

istio:
  # -- Toggle istio interaction.
  enabled: false
  kibana:
    # -- Toggle virtualService creation
    enabled: true
    # -- Annotations for controls the gateway used/attached to the virtualService
    annotations: {}
    # -- Labels for virtualService
    labels: {}
    # -- Gateway(s) to apply virtualService routes to.
    gateways:
      - istio-system/main
    hosts:
      # -- hosts
      - kibana.{{ .Values.hostname }}

sso:
  # -- Toggle and configure SSO with Keycloak. Example values are for local development.
  enabled: false
  # -- redirect_url defaults to .Values.istio.kibana.hosts[0] if not set.
  redirect_url: ""
  # -- client_id
  client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-kibana

  # -- OIDC client secret, can be empty for public client.
  client_secret: ""
  oidc:
    # -- host
    host: login.dso.mil
    # -- realm
    realm: baby-yoda

  # Additional fields (required for SSO - default templates for keycloak)

  # -- issuer
  issuer: "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}"
  # -- auth_url
  auth_url: "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/auth"
  # -- token_url
  token_url: "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/token"
  # -- userinfo_url
  userinfo_url: "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/userinfo"
  # -- jwks_url
  jwkset_url: "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/certs"
  # -- claims_principal
  claims_principal: "preferred_username"
  # -- requested_scopes
  requested_scopes:
    - openid

  # Additional fields (required for keycloak - may be optional for other providers).

  # -- signature_algorithm
  signature_algorithm: "RS256"
  # --endsession_url
  endsession_url: "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/logout"
  # -- claims_group
  claims_group: "groups"
  # -- claims_mail
  claims_mail: "email"

  # Additional fields.

  # -- claims_principal_pattern
  claims_principal_pattern: ""
  # -- cert_authorities
  cert_authorities: []

kibanaBasicAuth:
  # -- Toggle this to turn off Kibana's built in auth and only allow SSO. Role mappings for SSO groups must be set up and SSO enabled before doing this.
  enabled: true

networkPolicies:
  # -- enabled
  enabled: false
  ingressLabels:
    # -- app
    app: istio-ingressgateway
    # -- istio
    istio: ingressgateway
  # -- See `kubectl cluster-info` and then resolve to IP
  controlPlaneCidr: 0.0.0.0/0

upgradeJob:
  image:
    # -- repository
    repository: registry1.dso.mil/ironbank/big-bang/base
    # -- tag
    tag: 8.4

# -- Openshift Container Platform Feature Toggle
openshift: false

bbtests:
  enabled: false
  cypress:
    artifacts: true
    envs:
      cypress_expect_logs: "false"
      cypress_kibana_url: "https://logging-ek-kb-http:5601/login"
    secretEnvs:
      - name: cypress_elastic_password
        valueFrom:
          secretKeyRef:
            name: "logging-ek-es-elastic-user"
            key: elastic
  scripts:
    image: registry1.dso.mil/ironbank/stedolan/jq:1.6
    envs:
      elasticsearch_host: "https://{{ .Release.Name }}-es-http.{{ .Release.Namespace }}.svc.cluster.local:9200"
      desired_version: "{{ .Values.elasticsearch.version }}"
    secretEnvs:
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "logging-ek-es-elastic-user"
            key: elastic
