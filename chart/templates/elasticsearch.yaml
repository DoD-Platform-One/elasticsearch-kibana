apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  version: {{ .Values.elasticsearch.version }}
  image: {{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}

  {{- if .Values.sso.enabled }}
  secureSettings:
    - secretName: sso-secret
  {{- end }}

  nodeSets:

  #
  # Masters
  #
  {{- with .Values.elasticsearch.master }}
  - name: master
    count: {{ .count }}

    config:
      index.store.type: mmapfs
      node.data: false
      node.ingest: false
      node.master: true
      node.ml: false
      node.store.allow_mmap: true
      xpack.ml.enabled: false
      xpack.security.authc.token.enabled: true
      {{- if $.Values.sso.enabled }}
      {{ include "oidc" $ | indent 6 }}
      {{- end }}
    volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          resources:
            requests:
              storage: {{ .persistence.size }}
          accessModes:
            - ReadWriteOnce
          {{- if .persistence.storageClassName }}
          storageClassName: {{ .persistence.storageClassName }}
          {{- end }}

    podTemplate:
      metadata:
        annotations:
          fluentbit.io/exclude-istio-proxy: "true"
          prometheus.istio.io/merge-metrics: "false"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
          traffic.sidecar.istio.io/excludeInboundPorts: "9300"
          traffic.sidecar.istio.io/excludeOutboundPorts: "9300"
      spec:
        {{- if .securityContext }}
        securityContext:
        {{- toYaml .securityContext | nindent 10 }}
        {{- end }}

        {{- if or .antiAffinity .nodeAffinity }}
        affinity:
        {{- end }}
        {{- if eq .antiAffinity "hard" }}
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    elasticsearch.k8s.elastic.co/statefulset-name: "{{ $.Release.Name }}-es-master"
                    elasticsearch.k8s.elastic.co/cluster-name: "{{ $.Release.Name }}"
                    elasticsearch.k8s.elastic.co/node-master: "true"
        {{- else if eq .antiAffinity "soft" }}
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    elasticsearch.k8s.elastic.co/statefulset-name: "{{ $.Release.Name }}-es-master"
                    elasticsearch.k8s.elastic.co/cluster-name: "{{ $.Release.Name }}"
                    elasticsearch.k8s.elastic.co/node-master: "true"
        {{- end }}
        {{- with .nodeAffinity }}
          nodeAffinity:
    {{ toYaml . | nindent 12 }}
        {{- end }}

        {{- if .initContainers }}
        initContainers:
        {{ toYaml .initContainers | nindent 10 }}
        {{- end }}
        containers:
          - name: elasticsearch
            env:
              - name: ES_JAVA_OPTS
                value: "-Xms{{ .heap.min }} -Xmx{{ .heap.max }}"
            resources:
              {{- toYaml .resources | nindent 14 }}
        {{- with $.Values.elasticsearch.imagePullSecrets }}
        imagePullSecrets:
        {{- toYaml . | nindent 10 }}
        {{- end }}

        {{- if $.Values.istio.enabled }}
        automountServiceAccountToken: true
      {{- end }}
  {{- end }}

  #
  # Data Nodes
  #
  {{- with .Values.elasticsearch.data }}
  - name: data
    count: {{ .count }}

    config:
      index.store.type: mmapfs
      node.data: true
      node.ingest: true
      node.master: false
      node.ml: false
      node.store.allow_mmap: true
      xpack.ml.enabled: false
      xpack.security.authc.token.enabled: true
      {{- if $.Values.sso.enabled }}
      {{ include "oidc" $ | indent 6 }}
      {{- end }}

    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        resources:
          requests:
            storage: {{ .persistence.size }}
        accessModes:
        - ReadWriteOnce
        {{- if .persistence.storageClassName }}
        storageClassName: {{ .persistence.storageClassName }}
        {{- end }}

    podTemplate:
      metadata:
        annotations:
          fluentbit.io/exclude-istio-proxy: "true"
          prometheus.istio.io/merge-metrics: "false"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
          traffic.sidecar.istio.io/excludeInboundPorts: "9300"
          traffic.sidecar.istio.io/excludeOutboundPorts: "9300"
          checksum/es-values: {{ include (print $.Template.BasePath "/elasticsearch.yaml") . | sha256sum }}
          checksum/kb-values: {{ include (print $.Template.BasePath "/kibana.yaml") . | sha256sum }}
      spec:
        {{- if .securityContext }}
        securityContext:
        {{- toYaml .securityContext | nindent 10 }}
        {{- end }}

        {{- if or .antiAffinity .nodeAffinity }}
        affinity:
        {{- end }}
        {{- if eq .antiAffinity "hard" }}
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    elasticsearch.k8s.elastic.co/statefulset-name: "{{ $.Release.Name }}-es-data"
                    elasticsearch.k8s.elastic.co/cluster-name: "{{ $.Release.Name }}"
                    elasticsearch.k8s.elastic.co/node-data: "true"
        {{- else if eq .antiAffinity "soft" }}
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    elasticsearch.k8s.elastic.co/statefulset-name: "{{ $.Release.Name }}-es-data"
                    elasticsearch.k8s.elastic.co/cluster-name: "{{ $.Release.Name }}"
                    elasticsearch.k8s.elastic.co/node-data: "true"
        {{- end }}
        {{- with .nodeAffinity }}
          nodeAffinity:
    {{ toYaml . | nindent 12 }}
        {{- end }}


        {{- if .initContainers }}
        initContainers:
        {{ toYaml .initContainers | nindent 10 }}
        {{- end }}
        containers:
          - name: elasticsearch
            env:
              - name: ES_JAVA_OPTS
                value: "-Xms{{ .heap.min }} -Xmx{{ .heap.max }}"
            resources:
              {{- toYaml .resources | nindent 14 }}
        {{- with $.Values.elasticsearch.imagePullSecrets }}
        imagePullSecrets:
          {{- toYaml . | nindent 10 }}
        {{- end }}

      {{- if $.Values.istio.enabled }}
        automountServiceAccountToken: true
      {{- end }}
  {{- end }}
